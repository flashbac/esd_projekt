TARGET   := ./program 
CXXFLAGS := -g -Wextra -Wall -Wno-long-long -pedantic-errors -std=c++98 
CXX      := g++ 
LIBS     := -I/usr/include/ -I/usr/include/opencv2 -L/usr/lib -ljson_linux-gcc-4.6_libmt -lboost_system -lboost_thread -lopencv_calib3d -lopencv_highgui -lopencv_contrib -lopencv_imgproc -lopencv_core -lopencv_legacy -lopencv_features2d -lopencv_ml -lopencv_flann -lopencv_objdetect -lopencv_gpu -lopencv_video -lpthread
EXT      := cpp 
BUILDDIR := build 
  
override BUILDDIR := $(strip $(BUILDDIR)) 
SOURCES  := $(wildcard *.$(EXT)) 
OBJECTS  := $(patsubst %.$(EXT), $(BUILDDIR)/%.o, $(SOURCES)) 
DEPS     := $(patsubst %.$(EXT), $(BUILDDIR)/%.dep, $(SOURCES)) 
  
.PHONY: all 
all: $(TARGET) 
  
$(TARGET): $(OBJECTS) $(DEPS) 
	$(CXX) $(CXXFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) 
  
ifneq ($(MAKECMDGOALS), clean) 
-include $(DEPS) 
endif 
  
$(OBJECTS): $(BUILDDIR)/%.o: %.$(EXT) $(BUILDDIR)/%.dep $(BUILDDIR)/.tag 
	$(CXX) $(CXXFLAGS) -c $< -o $@ 
  
$(DEPS): $(BUILDDIR)/%.dep: %.$(EXT) $(BUILDDIR)/.tag 
	mkdir -p $(dir $(@)) 
	$(CXX) $(CXXFLAGS) -MM $< -MT $@ -MT $(<:.$(EXT)=.o) -o $@ 
  
%.tag: 
	mkdir -p $(dir $(@)) 
	touch $@ 
  
.PHONY: clean 
clean: 
	$(RM) -r $(BUILDDIR)
